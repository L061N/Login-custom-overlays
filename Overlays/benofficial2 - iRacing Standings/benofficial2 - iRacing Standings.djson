{"Variables":{"DashboardVariables":[{"VariableName":"PlayerNameTextColor","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":3,"Interpreter":1,"Expression":"return '#EBAE00';"},"EvaluateBeforeScreenRoles":false},{"VariableName":"DriverInfo","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"// Shared driver info about all cars.\r\n// We use a Dashboard Variable to optimize because in order to refresh the DriverInfo, we need to iterate over all cars and this would need to be done for each property needing that info. With a Dashboard Variable it is done once for all properties.\r\n// Also it allows the logic to keep being evaluated even if the overlay elements aren't visibe, as SimHub does not evaluate properties of hidden elements.\r\n\r\n// De-initialize when game not running, and before the race starts\r\nif (!isGameRunning() || (isRace() && getSessionState(0) < 4))\r\n{  \r\n    root[\"sessionTime\"] = null;\r\n    root[\"driverInfo\"] = null;\r\n    root[\"refreshTime\"] = null;\r\n    return null;\r\n}\r\n\r\n// De-initialize when changing/restarting session\r\nconst sessionTime = NewRawData().Telemetry[\"SessionTime\"];\r\nif (root[\"sessionTime\"] == null || sessionTime < root[\"sessionTime\"])\r\n{\r\n    root[\"sessionTime\"] = sessionTime;    \r\n    root[\"driverInfo\"] = null;\r\n    root[\"refreshTime\"] = null;\r\n    return null;\r\n}\r\n\r\n// Initialize\r\nif (root[\"driverInfo\"] == null)\r\n{\r\n    root[\"driverInfo\"] = [];\r\n    root[\"refreshTime\"] = Date.now();\r\n    //log(\"driverInfo initialized\");\r\n}\r\n\r\n// Refresh the data at a given interval\r\nif (root[\"refreshTime\"] <= Date.now())\r\n{\r\n    root[\"refreshTime\"] = Date.now() + root['refreshInterval'];\r\n    let classIndex = $prop('IRacingExtraProperties.iRacing_Player_ClassIndex');\r\n    \r\n    for (let i = 0; i < 64; i++) \r\n    {\r\n        const number = getLeaderboardProp('CarNumber', classIndex, i);\r\n        if (number == null || number == '')\r\n        {\r\n            continue;\r\n        }\r\n\r\n        let info = root[\"driverInfo\"][number];\r\n        if (info == null)\r\n        {\r\n            info = {\r\n                lastPitLap: 0,\r\n                lastPitLapConfirmed: 0,\r\n                inPitSince: null,\r\n            };\r\n        }\r\n            \r\n        const inPit = getLeaderboardProp('IsInPit', classIndex, i);\r\n        if (inPit)\r\n        {\r\n            // Remember when they entered the pit.\r\n            if (!info.inPitSince)\r\n            {\r\n                info.inPitSince = Date.now();\r\n                info.lastPitLap = getLeaderboardProp('CurrentLap', classIndex, i);\r\n            }\r\n            \r\n            // If they are in the pit for a very short time then we consider that a glitch in telemetry and ignore it.\r\n            if (info.inPitSince && info.inPitSince + root['minPitTime'] < Date.now())\r\n            {\r\n                // Remember the lap when they entered the pit.\r\n                // We use 'their' lap, not the leader's lap.\r\n                info.lastPitLapConfirmed = info.lastPitLap;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            info.inPitSince = null;\r\n        }\r\n        \r\n        root[\"driverInfo\"][number] = info;\r\n    }\r\n}\r\n\r\nroot[\"sessionTime\"] = sessionTime;\r\nreturn root[\"driverInfo\"];","PreExpression":"// Interval in ms at which we refresh the array. Set 0 to use SimHub's min interval.\r\nroot['refreshInterval'] = 0;\r\n\r\n// Minimum amount of time in ms for a car to stay in pit to be considered pitting\r\nroot['minPitTime'] = 4000"},"EvaluateBeforeScreenRoles":false}]},"DashboardDebugManager":{"WindowPositionSettings":{"IsFullScreen":true,"Position":"2010,230,555,291","TopMost":false,"AllowTransparency":true,"CloseOnMonitorLoss":false,"NoWindowActivate":false}},"Version":2,"Id":"8fcb931c-2fcb-4cae-bc11-2c32d147f49f","BaseHeight":530,"BaseWidth":363,"BackgroundColor":"#FF000000","Screens":[{"RenderingSkip":0,"Name":"Screen","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"150094c1-b8b5-459b-8173-c1f4f3fe9fc5","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#00FFFFFF","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":false,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":false,"Repetitions":24,"PrepareRepetitions":true,"RepeatTopOffset":20.0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":false,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#FF000000","Height":20.0,"Left":0.0,"Opacity":60.0,"Top":25.0,"Visible":true,"Width":363.0,"Name":"Background","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Top":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"L23","TextColor":"#FFFFD100","HorizontalAlignment":1,"VerticalAlignment":1,"UseMonospacedText":true,"CharWidth":8.0,"SpecialCharsWidth":3.0,"BackgroundColor":"#00FFFFFF","Height":20.0,"Left":332.0,"Top":25.0,"Visible":true,"Width":30.0,"Name":"PitLap","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"let repeatIndex = repeatindex();\r\n\r\n// Hide\r\nvar isInPit = getIndexedProp('IRacingExtraProperties.SLB_IsInPit', repeatIndex);\r\nvar tireString = getIndexedProp('IRacingExtraProperties.SLB_TireCompound', repeatIndex);\r\nvar connected = isConnected(repeatIndex);\r\nif (!isRace() || isInPit || !connected || String(tireString).length <= 0)\r\n{\r\n\treturn '';\r\n}\r\n\r\n// Get the data using a Dashboard Variable\r\nlet driverInfo = $prop('variable.DriverInfo');\r\nif (driverInfo == null)\r\n{\r\n    return '';\r\n}\r\n\r\nconst number = getIndexedProp('IRacingExtraProperties.SLB_CarNumber', repeatIndex);\r\nlet info = driverInfo[number];\r\nif (info == null)\r\n{\r\n    return '';\r\n}\r\n\r\nif (info.lastPitLapConfirmed <= 0)\r\n{\r\n\treturn '';\r\n}\r\n\r\nreturn 'L' + info.lastPitLapConfirmed;"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"PIT","TextColor":"#FF000000","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#BEFFD100","Height":20.0,"Left":332.0,"Top":25.0,"Visible":true,"Width":31.0,"Name":"Pit","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"var inPit = getIndexedProp('IRacingExtraProperties.SLB_IsInPit', repeatindex());\r\nvar connected = isConnected(repeatindex());\r\nreturn !connected || inPit;"},"Mode":2},"Text":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (!isConnected(repeatindex()))\r\n{\r\n\treturn ''\r\n}\r\n\r\nvar inPit = getIndexedProp('IRacingExtraProperties.SLB_IsInPit', repeatindex());\r\nif (inPit)\r\n{\r\n\treturn 'PIT';\r\n}"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2},"BackgroundColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (!isConnected(repeatindex()))\r\n{\r\n\treturn '#00000000'\r\n\t//return '#CEFF6345'\r\n}\r\nreturn '#BEFFD100'"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (!isConnected(repeatindex()))\r\n{\r\n\treturn '#CEFF6345'\r\n}\r\nreturn 'Black'"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"2:34.897","TextColor":"#FFFFFFFF","HorizontalAlignment":0,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":20.0,"Left":270.0,"Top":25.0,"Visible":true,"Width":60.0,"Name":"BestLap","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"let time = getIndexedProp('IRacingExtraProperties.SLB_BestLapTime', repeatindex());\r\nif (isInvalidTime(time))\r\n{\r\n\treturn \"0:00.000\"\r\n}\r\nreturn time"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return !isRace();"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (getIndexedProp('IRacingExtraProperties.SLB_IsPlayer', repeatindex()))\r\n{\r\n\treturn $prop('variable.PlayerNameTextColor');\r\n}\r\nreturn 'White';"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"22.8","TextColor":"#FFFFFFFF","HorizontalAlignment":2,"VerticalAlignment":1,"UseMonospacedText":true,"CharWidth":8.0,"SpecialCharsWidth":3.0,"BackgroundColor":"#00FFFFFF","Height":20.0,"Left":272.0,"Top":25.0,"Visible":true,"Width":30.0,"Name":"GapToLeader","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"const lap = $prop('IRacingExtraProperties.iRacing_Player_CurrentLap');\r\nif (lap == 0) return '';\r\n\t\r\nlet gap = getIndexedProp('IRacingExtraProperties.SLB_GapToLeaderString', repeatindex());\r\nif (repeatindex() > 1)\r\n{\r\n\tif (String(gap).substring(String(gap).length - 1, String(gap).length) == 'L')\r\n\t{\r\n\t\tgap = Number(String(gap).substring(0, String(gap).length - 1)).toFixed(0) + 'L';\r\n\t}\r\n}\r\nreturn gap;"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return isRace();"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (getIndexedProp('IRacingExtraProperties.SLB_IsPlayer', repeatindex()))\r\n{\r\n\treturn $prop('variable.PlayerNameTextColor');\r\n}\r\nreturn 'White';"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":11.0,"Text":"10.0k","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FFFF0000","BorderStyle":{"BorderColor":"#83000000","BorderTop":1,"BorderBottom":1,"BorderLeft":1,"BorderRight":1,"RadiusTopLeft":4,"RadiusTopRight":4,"RadiusBottomLeft":4,"RadiusBottomRight":4},"Height":16.0,"Left":230.0,"Top":27.0,"Visible":true,"Width":33.0,"Name":"iRating","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_iRating', repeatindex());"},"Mode":2},"BackgroundColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_LicenceColor', repeatindex());"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_LicenceTextColor', repeatindex());"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex()) + 2;"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","TextPadding":{"PaddingBottom":1},"FontSize":10.0,"Text":"","TextColor":"#FFA9A9A9","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FF000000","BorderStyle":{"BorderColor":"#FF000000","BorderTop":2,"BorderBottom":2,"BorderLeft":2,"BorderRight":2,"RadiusTopLeft":8,"RadiusTopRight":8,"RadiusBottomLeft":8,"RadiusBottomRight":8},"Height":18.0,"Left":195.0,"Top":27.0,"Visible":true,"Width":18.0,"Name":"TireCompoundBackground","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex()) + 1.5;"},"Mode":2},"Left":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"// When not using the LapsSincePit\r\n//return 211;\r\n\r\nif (isRace())\r\n{\r\n\treturn 312;\r\n}\r\nreturn 339;"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return tireCompoundVisible(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","TextPadding":{"PaddingBottom":1},"FontSize":8.0,"Text":"M","TextColor":"#FFFFFF00","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FF000000","BorderStyle":{"BorderColor":"#FFFFFF00","BorderTop":2,"BorderBottom":2,"BorderLeft":2,"BorderRight":2,"RadiusTopLeft":8,"RadiusTopRight":8,"RadiusBottomLeft":8,"RadiusBottomRight":8,"Bindings":{"BorderColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (!carHasTireCompounds())\r\n{\r\n\tif (getTireType(repeatindex()) == 'Wet')\r\n\t{\r\n\t\treturn 'DeepSkyBlue'\r\n\t}\r\n\treturn 'White';\r\n}\r\n\r\nconst color = getIndexedProp('IRacingExtraProperties.SLB_TireCompoundColor', repeatindex());\r\nconst compound = getIndexedProp('IRacingExtraProperties.SLB_TireCompound', repeatindex());\r\nconst carId = $prop('DataCorePlugin.GameData.CarId');\r\n\r\nif (carId == 'dallarair18')\r\n{\r\n\t// Special case for IndyCar, return M as S and S as H because that's matching the color.\r\n\tif (compound == 'M')\r\n\t{\r\n\t\treturn 'Red';\r\n\t}\r\n\telse if (compound == 'S')\r\n\t{\r\n\t\treturn 'White';\r\n\t}\r\n}\r\n\r\nreturn color;"},"Mode":2}}},"Height":14.0,"Left":195.0,"Top":28.0,"Visible":true,"Width":14.0,"Name":"TireCompound","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"// TODO: Revisit this logic when cars with tire compounds have wet tires.\r\nif (!carHasTireCompounds())\r\n{\r\n\tif (getTireType(repeatindex()) == 'Wet')\r\n\t{\r\n\t\treturn 'W';\r\n\t}\r\n\treturn 'H';\r\n}\r\n\r\nconst compound = getIndexedProp('IRacingExtraProperties.SLB_TireCompound', repeatindex());\r\nconst carId = $prop('DataCorePlugin.GameData.CarId');\r\n\r\nif (carId == 'dallarair18')\r\n{\r\n\t// Special case for IndyCar, return M as S and S as H because that's matching the color.\r\n\tif (compound == 'M')\r\n\t{\r\n\t\treturn 'S';\r\n\t}\r\n\telse if (compound == 'S')\r\n\t{\r\n\t\treturn 'H';\r\n\t}\r\n}\r\n\r\nreturn compound;"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (!carHasTireCompounds())\r\n{\r\n\tif (getTireType(repeatindex()) == 'Wet')\r\n\t{\r\n\t\treturn 'DeepSkyBlue'\r\n\t}\r\n\treturn 'White';\r\n}\r\n\r\nconst color = getIndexedProp('IRacingExtraProperties.SLB_TireCompoundColor', repeatindex());\r\nconst compound = getIndexedProp('IRacingExtraProperties.SLB_TireCompound', repeatindex());\r\nconst carId = $prop('DataCorePlugin.GameData.CarId');\r\n\r\nif (carId == 'dallarair18')\r\n{\r\n\t// Special case for IndyCar, return M as S and S as H because that's matching the color.\r\n\tif (compound == 'M')\r\n\t{\r\n\t\treturn 'Red';\r\n\t}\r\n\telse if (compound == 'S')\r\n\t{\r\n\t\treturn 'White';\r\n\t}\r\n}\r\n\r\nreturn color;"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex()) + 3.5;"},"Mode":2},"Left":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"// When not using the LapsSincePit\r\n//return 211;\r\n\r\nif (isRace())\r\n{\r\n\treturn 314;\r\n}\r\nreturn 341;"},"Mode":2},"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"return tireCompoundVisible(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"Driver Name","TextColor":"#FFFFFFFF","HorizontalAlignment":0,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":20.0,"Left":65.0,"Top":25.0,"Visible":true,"Width":160.0,"Name":"DriverName","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_Name', repeatindex());"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if (getIndexedProp('IRacingExtraProperties.SLB_IsPlayer', repeatindex()))\r\n{\r\n\treturn $prop('variable.PlayerNameTextColor');\r\n}\r\nreturn 'White';\r\n"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":14.0,"Text":"#555","TextColor":"#FF000000","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FF40E0D0","Height":20.0,"Left":27.0,"Top":25.0,"Visible":true,"Width":34.0,"Name":"Number","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return '#' + getIndexedProp('IRacingExtraProperties.SLB_CarNumber', repeatindex());"},"Mode":2},"BackgroundColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_ClassColor', repeatindex());"},"Mode":2},"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","TextPadding":{"PaddingRight":5},"FontSize":14.0,"Text":"66","TextColor":"#FFFFFFFF","HorizontalAlignment":2,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":20.0,"Left":2.0,"Top":25.0,"Visible":true,"Width":25.0,"Name":"PositionInClass","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const pos = getIndexedProp('IRacingExtraProperties.SLB_PositionInClass', repeatindex());\r\nreturn String(pos).slice(0, -2);"},"Mode":2},"TextColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if (getIndexedProp('IRacingExtraProperties.SLB_IsPlayer', repeatindex()))\r\n{\r\n\treturn $prop('variable.PlayerNameTextColor');\r\n}\r\nreturn 'White';"},"Mode":2},"Top":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"return rowTop(repeatindex());"},"Mode":2}}}],"Visible":true,"Name":"Visible","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return getIndexedProp('IRacingExtraProperties.SLB_RowIsVisible', repeatindex());"},"Mode":2}}}],"Visible":true,"Name":"Leaderboard (repeat)","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#4B000000","Height":2.0,"Left":0.0,"Top":84.0,"Visible":false,"Width":363.0,"Name":"LeaderSeparator","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Top":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return 24 + $prop('IRacingExtraProperties.iRacing_LeaderboardLayout_SLBVisibleLeaders') * 20;"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"return false;\r\n//return $prop('IRacingExtraProperties.SLB_Top15DividerVisible');"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":false,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#FF000000","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3},"Height":23.0,"Left":0.0,"Opacity":90.0,"Top":0.0,"Visible":true,"Width":363.0,"Name":"Background","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","TextPadding":{"PaddingRight":3},"FontSize":18.0,"Text":"00:00:00","TextColor":"#FFFFFFFF","HorizontalAlignment":2,"VerticalAlignment":1,"UseMonospacedText":true,"CharWidth":11.0,"SpecialCharsWidth":6.0,"BackgroundColor":"#00FFFFFF","Height":23.0,"Left":0.0,"Top":-1.0,"Visible":true,"Width":363.0,"Name":"Time Left","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"var sessionTimeRemain = $prop('DataCorePlugin.GameRawData.Telemetry.SessionTimeRemain');\r\nreturn getTimeFromSeconds(sessionTimeRemain);"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"var totalLaps = parseInt($prop('DataCorePlugin.GameData.TotalLaps'));\r\nvar sessionLapsRemain = parseInt($prop('DataCorePlugin.GameRawData.Telemetry.SessionLapsRemain'));\r\nvar sessionType = new String($prop('DataCorePlugin.GameData.SessionTypeName'));\r\nvar sessionTimeRemain = $prop('DataCorePlugin.GameRawData.Telemetry.SessionTimeRemain');\r\n\r\nif (totalLaps <= 0)\r\n{\r\n\treturn true;\r\n}\r\nelse if (sessionLapsRemain > 20000 && sessionLapsRemain != 604800)\r\n{\r\n\treturn true;\r\n}\r\nelse if (sessionType.toLowerCase().indexOf(\"qual\") != -1)\r\n{\r\n\treturn true;\r\n}\r\nelse if (sessionTimeRemain <= 0)\r\n{\r\n\treturn false;\r\n}\r\n\r\nreturn true;"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"Lap 000/000","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":23.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":363.0,"Name":"CurrentLap","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"var currentLap = parseInt($prop('DataCorePlugin.GameData.CurrentLap'));\r\nvar totalLaps = parseInt($prop('DataCorePlugin.GameData.TotalLaps'));\r\nvar sessionLapsRemain = parseInt($prop('DataCorePlugin.GameRawData.Telemetry.SessionLapsRemain'));\r\n\r\nif (totalLaps <= 0)\r\n{\r\n\ttotalLaps = '~';\r\n}\r\nelse if (sessionLapsRemain > 20000 && sessionLapsRemain != 604800)\r\n{\r\n\ttotalLaps = '~';\r\n}\r\n\r\nreturn 'Lap ' + currentLap + '/' + totalLaps;"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Roboto","FontWeight":"Bold","TextPadding":{"PaddingLeft":3},"FontSize":18.0,"Text":"Lone Qualifying","TextColor":"#FFFFFFFF","HorizontalAlignment":0,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":23.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":363.0,"Name":"SessionType","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"Expression":"[DataCorePlugin.GameData.SessionTypeName]"},"Mode":2}}}],"Visible":true,"Name":"Header","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"Name":"Visible","RenderingSkip":50,"MinimumRefreshIntervalMS":500.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"return isGameIRacing() && isGameRunning() && !isReplayPlaying();"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Segoe UI","FontWeight":"Bold","FontSize":12.0,"Text":"New version available","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FFFF0000","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3,"RadiusBottomLeft":3,"RadiusBottomRight":3},"Height":18.0,"Left":84.0,"Top":0.0,"Visible":false,"Width":205.0,"IsFreezed":true,"Name":"Version","RenderingSkip":50,"MinimumRefreshIntervalMS":500.0,"Bindings":{"Visible":{"Formula":{"JSExt":0,"Interpreter":1,"Expression":"if (root['hide'])\r\n{\r\n\treturn false;\r\n}\r\n\r\nconst url = 'https://raw.githubusercontent.com/fixfactory/bo2-official-overlays/main/Versions.json';\r\n\r\nconst jsonStr = downloadstringasync(500, url);\r\n\r\nif (jsonStr) \r\n{\r\n\tconst json = JSON.parse(jsonStr);\r\n\tif (json[root['name']] != root['version']) \r\n\t{\r\n        if (!root['timeChecked'])\r\n        {\r\n\t\t\troot['timeChecked'] = Date.now();\r\n\t\t}\r\n\r\n\t\tif (((Date.now() - root['timeChecked'])) < 5000)\r\n\t\t{\r\n\t\t\treturn true;\r\n        }\r\n    }\r\n    \r\n    root['hide'] = true;\r\n}\r\n\r\nreturn false;","PreExpression":"// Download new version at https://github.com/fixfactory/bo2-official-overlays\r\nroot['name'] = 'standings'\r\nroot['version'] = '1.6'"},"Mode":2}}}],"MinimumRefreshIntervalMS":0.0}],"SnapToGrid":true,"HideLabels":true,"ShowForeground":true,"ForegroundOpacity":100.0,"ShowBackground":true,"BackgroundOpacity":100.0,"ShowBoundingRectangles":false,"GridSize":5,"Images":[],"Metadata":{"SimHubVersion":"9.6.1","Title":"benofficial2 - iRacing Standings","Author":"twitch.tv/benofficial2","ScreenCount":1.0,"InGameScreensIndexs":[0],"IdleScreensIndexs":[0],"MainPreviewIndex":0,"IsOverlay":true,"Width":363.0,"Height":530.0,"OverlaySizeWarning":false,"MetadataVersion":2.0,"EnableOnDashboardMessaging":true,"PitScreensIndexs":[]},"ShowOnScreenControls":true,"IsOverlay":true,"EnableClickThroughOverlay":true,"EnableOnDashboardMessaging":true}